// <auto-generated />
using System;
using FancyPower3k.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FancyPower3k.DataAccess.Migrations
{
    [DbContext(typeof(FancyPowerDbContext))]
    [Migration("20250514074755_Update1")]
    partial class Update1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Consumer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistributionPanelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxConsumption")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PowerConsumption")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DistributionPanelId");

                    b.ToTable("Consumers");

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174004",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Office of Bugs Bunny",
                            DistributionPanelId = "123e4567-e89b-12d3-a456-426614174003",
                            MaxConsumption = 2000.0,
                            Name = "Bugs Bunny Office",
                            PowerConsumption = 1500.0
                        },
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174005",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lab of Daffy Duck",
                            DistributionPanelId = "123e4567-e89b-12d3-a456-426614174003",
                            MaxConsumption = 2500.0,
                            Name = "Daffy Duck Lab",
                            PowerConsumption = 2000.0
                        },
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174006",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Secret cave of Batman",
                            DistributionPanelId = "123e4567-e89b-12d3-a456-426614174002",
                            MaxConsumption = 7000.0,
                            Name = "Batman Cave",
                            PowerConsumption = 5000.0
                        });
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.DistributionPanel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxPowerDelivery")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("DistributionPanels");

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174002",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary distribution panel for Gotham",
                            LocationId = "123e4567-e89b-12d3-a456-426614174001",
                            MaxPowerDelivery = 10000.0,
                            Name = "Main Panel Gotham"
                        },
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174003",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Backup distribution panel for Toon Town",
                            LocationId = "123e4567-e89b-12d3-a456-426614174000",
                            MaxPowerDelivery = 5000.0,
                            Name = "Backup Panel Toon"
                        });
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174000",
                            Address = "123 Toon Town Lane",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Acme Corporation HQ",
                            Size = 5000
                        },
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174001",
                            Address = "456 Gotham Ave",
                            ChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wayne Enterprises",
                            Size = 10000
                        });
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Consumer", b =>
                {
                    b.HasOne("FancyPower3k.DomainModel.Entities.DistributionPanel", "DistributionPanel")
                        .WithMany("Consumers")
                        .HasForeignKey("DistributionPanelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributionPanel");
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.DistributionPanel", b =>
                {
                    b.HasOne("FancyPower3k.DomainModel.Entities.Location", "Location")
                        .WithMany("DistributionPanels")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Employee", b =>
                {
                    b.HasOne("FancyPower3k.DomainModel.Entities.Location", "Location")
                        .WithMany("Employees")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.DistributionPanel", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("FancyPower3k.DomainModel.Entities.Location", b =>
                {
                    b.Navigation("DistributionPanels");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
